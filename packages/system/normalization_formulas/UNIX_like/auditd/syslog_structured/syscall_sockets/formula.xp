JSON = ''
COND = (
    $eventid != null
    and $node != null
    and $timestamp != null
    and (
        (
            find_substr($items["SYSCALL"][0], "arch=c000003e") != null
            and (
                find_substr($items["SYSCALL"][0], "syscall=41") != null      # socket
                or find_substr($items["SYSCALL"][0], "syscall=42") != null   # connect
                or find_substr($items["SYSCALL"][0], "syscall=43") != null   # accept
                or find_substr($items["SYSCALL"][0], "syscall=288") != null  # accept4
                or find_substr($items["SYSCALL"][0], "syscall=49") != null   # bind
                or find_substr($items["SYSCALL"][0], "syscall=50") != null   # listen
            )
        )
        or (
            find_substr($items["SYSCALL"][0], "arch=40000003") != null
            and (
                find_substr($items["SYSCALL"][0], "syscall=359") != null     # socket
                or find_substr($items["SYSCALL"][0], "syscall=362") != null  # connect
                or find_substr($items["SYSCALL"][0], "syscall=364") != null  # accept4
                or find_substr($items["SYSCALL"][0], "syscall=361") != null  # bind
                or find_substr($items["SYSCALL"][0], "syscall=363") != null  # listen
            )
        )
    )
)

subject = "process"

$kv_syscall = keyvalue($items['SYSCALL'][0], ' ', '=')

if $kv_syscall["success"] == "yes" then
    status = "success"
else
    status = "failure"
endif

# socket
if in_list(["41", "359"], $kv_syscall["syscall"]) then
    action = "create"
    object = "socket"
    
    $sock_domain = switch $kv_syscall["a0"]    # Домен (есть недекодируемые варианты)
        case "1"  "AF_UNIX"
        case "2"  "AF_INET"
        case "a"  "AF_INET6"
        case "11" "AF_PACKET"
    endswitch
    
    if $sock_domain == null then
        $sock_domain = $kv_syscall["a0"]
    endif
    
    object.domain = $sock_domain
    
    # 0x80000 - SOCK_CLOEXEC
    # 0x800  - SOCK_NONBLOCK
    $socket_type = switch substr($kv_syscall["a1"], -1, 1)  # Тип сокета
        case "1" "SOCK_STREAM"
        case "2" "SOCK_DGRAM"
        case "3" "SOCK_RAW"
        case "a" "SOCK_PACKET"
    endswitch
    
    if $socket_type == null then
        $socket_type = $kv_syscall["a1"]
    endif
    
    object.type = $socket_type

    $protocol_raw = switch number16($kv_syscall["a2"])
        case 0   "IP"
        case 1   "ICMP"    # Internet Control Message         
        case 2   "IGMP"    # Internet Group Management       
        case 6   "TCP"     # Transmission Control             
        case 17  "UDP"     # User Datagram                
        case 47  "GRE"     # General Routing Encapsulation                      
        case 50  "ESP"     # Encap Security Payload for IPv6 
        case 51  "AH"      # Authentication Header for IPv6  
        case 58  "ICMPv6"  # ICMP for IPv6                                              
        case 88  "EIGRP"   # EIGRP                         
        case 89  "OSPF"    # OSPFIGP                                         
        case 103 "PIM"     # Protocol Independent Multicast              
        case 112 "VRRP"    # Virtual Router Redundancy Protocol
        case 115 "L2TP"    # Layer Two Tunneling Protocol      
        case 132 "SCTP"    # Stream Control Transmission Protocol 
        case 136 "UDPLite" # UDP Lite
    endswitch
    
    protocol = if $protocol_raw != null then $protocol_raw else number16($kv_syscall["a2"]) endif

    category.generic = "Socket"
    category.high = "Network Management"
    category.low = "Manipulation"

# connect
elif in_list(["42", "362"], $kv_syscall["syscall"]) then
    action = "open"
    object = "connection"

    direction = "egress"

    category.generic = "Connection"
    category.high = "Network Interaction Management"
    category.low = "Communication"

# accept(4)
elif in_list(["43", "288", "364"], $kv_syscall["syscall"]) then
    action = "open"
    object = "connection"

    direction = "ingress"

    category.generic = "Connection"
    category.high = "Network Interaction Management"
    category.low = "Communication"

# bind
elif in_list(["49", "361"], $kv_syscall["syscall"]) then
    action = "assign"
    object = "socket"

    category.generic = "Socket"
    category.high = "Network Management"
    category.low = "Manipulation"

# listen
elif in_list(["50", "363"], $kv_syscall["syscall"]) then
    action = "assign"
    object = "socket"

    category.generic = "Socket"
    category.high = "Network Management"
    category.low = "Manipulation"
endif

# Декодируем HEX, если требуется
$auid_en = strip($kv_syscall["AUID"], '"', '"')
if $auid_en == $kv_syscall["AUID"] then
    $auid_en = hex_to_string($kv_syscall["AUID"])
endif

$auid_list = csv($auid_en, "@", "")

# Декодируем HEX, если требуется
$euid_en = strip($kv_syscall["EUID"], '"', '"')
if $euid_en == $kv_syscall["EUID"] then
    $euid_en = hex_to_string($kv_syscall["EUID"])
endif

$euid_list = csv($euid_en, "@", "")

if $kv_syscall["auid"] != "4294967295" then
    subject.account.name = $auid_list[0]
    subject.account.domain = $auid_list[1]

    subject.account.id = $kv_syscall["auid"]
else
    subject.account.name = $euid_list[0]
    subject.account.domain = $euid_list[1]

    subject.account.id = $kv_syscall["euid"]
endif

subject.account.privileges = $kv_syscall["euid"]
subject.account.session_id = $kv_syscall["ses"]

subject.process.id = $kv_syscall["pid"]
subject.process.parent.id = $kv_syscall["ppid"]

# SYSCALL::exe
if not in_list(["<no_memory>", "<too_long>", "(null)"], $kv_syscall["exe"]) then
    # Декодируем HEX, если требуется
    $exe = strip($kv_syscall["exe"], '"', '"')
    if $exe == $kv_syscall["exe"] then
        $exe = hex_to_string($kv_syscall["exe"])
    endif
endif

$process_path_and_name = csv($exe, "/", "")
$process_name = $process_path_and_name[length($process_path_and_name) - 1]
$process_path = strip($exe, "", $process_name)

subject.process.fullpath = $exe
subject.process.name = $process_name
subject.process.path = $process_path

# PROCTITLE
if $items["PROCTITLE"] != null then
    $kv_proctitle = keyvalue($items["PROCTITLE"][0], ' ', '=')

    $process_proctitle = strip($kv_proctitle["proctitle"], '"', '"')
    if $process_proctitle == "(null)" then
        $process_proctitle = null
    elif $process_proctitle == $kv_proctitle["proctitle"] then
        $cmdline_raw = hex_to_string($kv_proctitle["proctitle"])

        # stripping corrupted char
        if $cmdline_raw == $kv_proctitle["proctitle"] then
            $cmdline_raw = hex_to_string(substr($kv_proctitle["proctitle"], 0, 254))
        endif
        if $cmdline_raw == $kv_proctitle["proctitle"] then
            $cmdline_raw = hex_to_string(substr($kv_proctitle["proctitle"], 0, 253))
        endif
        if $cmdline_raw == $kv_proctitle["proctitle"] then
            $cmdline_raw = hex_to_string(substr($kv_proctitle["proctitle"], 0, 252))
        endif

        $process_proctitle = replace($cmdline_raw, " ", "\u0000")
    endif
endif

subject.process.meta = $process_proctitle  # PROCTITLE

# Декодируем HEX, если требуется
$egid_en = strip($kv_syscall["EGID"], '"', '"')
if $egid_en == $kv_syscall["EGID"] then
    $egid_en = hex_to_string($kv_syscall["EGID"])
endif

object.account.group = coalesce($egid_en, $kv_syscall["egid"])

object.account.name = $euid_list[0]
object.account.domain = $euid_list[1]

object.account.id = $kv_syscall["euid"]

# SOCKADDR
$kv_sockaddr = keyvalue($items["SOCKADDR"][0], ' ', '=', '"')

$socket = $kv_sockaddr["saddr"]

if not in_list(["41", "359", "50", "363"], $kv_syscall["syscall"]) then
    object.property = "socket_domain"
    object.value = switch substr($socket, 0, 4)
        case "0000" "AF_UNSPEC"
        case "0100" "AF_UNIX"
        case "0200" "AF_INET"
        case "0A00" "AF_INET6"
    endswitch
endif

if $kv_sockaddr["SADDR"] != null then
    # ENRICHED
    $port = number($kv_sockaddr["lport"])
    $ip = strip(lower($kv_sockaddr["laddr"]), "::ffff:", "")
else
    # Non-ENRICHED
    $port = number16(substr($socket, 4, 4))

    if substr($socket, 0, 4) == "0200" then
        # IPv4
        $octet_1 = string(number16(substr($socket, 8, 2)))
        $octet_2 = string(number16(substr($socket, 10, 2)))
        $octet_3 = string(number16(substr($socket, 12, 2)))
        $octet_4 = string(number16(substr($socket, 14, 2)))
        $ip = ipv4($octet_1 + "." + $octet_2 + "." + $octet_3 + "." + $octet_4)
    elif substr($socket, 0, 4) == "0A00" then
        # IPv6
        $hextet_1 = substr($socket, 16, 4)
        $hextet_2 = substr($socket, 20, 4)
        $hextet_3 = substr($socket, 24, 4)
        $hextet_4 = substr($socket, 28, 4)
        $hextet_5 = substr($socket, 32, 4)
        $hextet_6 = substr($socket, 36, 4)
        $hextet_7 = substr($socket, 40, 4)
        $hextet_8 = substr($socket, 44, 4)
        $ip = ipv6($hextet_1 + ":" + $hextet_2 + ":" + $hextet_3 + ":" + $hextet_4 + ":" +
                    $hextet_5 + ":" + $hextet_6  + ":" + $hextet_7 + ":" + $hextet_8)

        if (substr($ip, 0, 30) == "0000:0000:0000:0000:0000:FFFF:") then
            $octet_1 = string(number16(substr($hextet_7, 0, 2)))
            $octet_2 = string(number16(substr($hextet_7, 2, 2)))
            $octet_3 = string(number16(substr($hextet_8, 0, 2)))
            $octet_4 = string(number16(substr($hextet_8, 2, 2)))
            $ip = ipv4($octet_1 + "." + $octet_2 + "." + $octet_3 + "." + $octet_4)
        endif
    endif
endif
    
if $kv_syscall["tty"] != "(none)" then
    $tty = $kv_syscall["tty"]

    if (substr($tty, 0, 3) == "pts") and (substr($tty, 3, 1) != "/") then
        logon_service = "pts/" + substr($tty, 3, length($tty) - 3)
    else
        logon_service = $tty
    endif
endif

# Декодируем HEX, если требуется
$comm = strip($kv_syscall["comm"], '"', '"')
if $comm == $kv_syscall["comm"] then
    $comm = hex_to_string($kv_syscall["comm"])
endif

datafield1 = $comm  # Executable Name

chain_id = $eventid  # AuditD Event ID

reason = switch $kv_syscall["exit"]
    case "-1"   "Operation not permitted"
    case "-2"   "No such file or directory"
    case "-4"   "Interrupted system call"
    case "-9"   "Bad file descriptor"
    case "-11"  "Resource temporarily unavailable"
    case "-12"  "Cannot allocate memory"
    case "-13"  "Permission denied"
    case "-14"  "Bad address"
    case "-20"  "Not a directory"
    case "-22"  "Invalid argument"
    case "-23"  "Too many open files in system"
    case "-24"  "Too many open files"
    case "-30"  "Read-only file system"
    case "-36"  "File name too long"
    case "-40"  "Too many levels of symbolic links"
    case "-71"  "Protocol error"
    case "-88"  "Socket operation on non-socket"
    case "-91"  "Protocol wrong type for socket"
    case "-93"  "Protocol not supported"
    case "-95"  "Operation not supported"
    case "-97"  "Address family not supported by protocol"
    case "-98"  "Address already in use"
    case "-99"  "Cannot assign requested address"
    case "-100" "Network is down"
    case "-101" "Network is unreachable"
    case "-103" "Software caused connection abort"
    case "-104" "Connection reset by peer"
    case "-105" "No buffer space available"
    case "-106" "Transport endpoint is already connected"
    case "-110" "Connection timed out"
    case "-111" "Connection refused"
    case "-113" "No route to host"
    case "-114" "Operation already in progress"
    case "-115" "Operation now in progress"
endswitch

time = epoch_to_datetime(number($timestamp))

msgid = switch $kv_syscall["syscall"]
    case "41"  "socket"
    case "359" "socket"
    case "42"  "connect"
    case "362" "connect"
    case "43"  "accept"
    case "288" "accept4"
    case "364" "accept4"
    case "49"  "bind"
    case "361" "bind"
    case "50"  "listen"
    case "363" "listen"
endswitch

importance = "low"

event_src.title = "unix_like"
event_src.subsys = "auditd"

# Декодируем HEX, если требуется
$key_raw = strip($kv_syscall["key"], '"', '"')
if $key_raw == $kv_syscall["key"] then
    $key_raw = hex_to_string($kv_syscall["key"])
endif

event_src.rule = if $key_raw != "(null)" then $key_raw else null endif

if $node != "" then
    if maybe_ipv4($node) != null or maybe_ipv6($node) != null then
        if (in_subnet($node, "127.0.0.0/8") == False and $node != "::1") then
            event_src.ip = $node
            labels = "node_contains_ext_ip"
        else
            event_src.ip = recv_ipv4
        endif
    else
        $first_dot = find_substr($node, ".")
        if $first_dot != null then
            event_src.fqdn = $node
            event_src.hostname = substr($node, 0, $first_dot)
        else
            event_src.hostname = $node
        endif
    endif
else
    event_src.ip = recv_ipv4
endif

if direction == "egress" then
    src.ip = event_src.ip
    src.hostname = event_src.hostname
    dst.ip = $ip
    dst.port = $port
elif direction == "ingress" then
    src.ip = $ip
    src.port = $port
    dst.ip = event_src.ip
    dst.hostname = event_src.hostname
elif in_list(["49", "361"], $kv_syscall["syscall"]) then  # bind
    dst.ip = $ip
    dst.port = $port
endif

event_src.category = "Operating system"

id = "PT_UNIX_like_auditd_syslog_structured_syscall_sockets"
