event Token_Request_Account_Name:
    key:
        event_src.host, event_src.title, object.name, object.account.name
    filter {
        filter::NotFromCorrelator()
        and event_src.title == "teamcity"
        and object == "request"
        and regex(object.query, "/app/rest/users/(name:\w+)/tokens/\w+", 0) != null
        and object.type == "POST"
        and object.name == "RPC2"
        and status == "success"
        and object.account.name != null
    }

event Token_Created_Account_Name:
    key:
        event_src.host, event_src.title, object.name, object.account.name
    filter {
        filter::NotFromCorrelator()
        and event_src.title == "teamcity"
        and object.type == "user_token"
        and object.name == "RPC2"
        and object.account.name != null
        and status == "success"
    }

event Token_Request_Account_ID:
    key:
        event_src.host, event_src.title, object.name, object.account.id
    filter {
        filter::NotFromCorrelator()
        and event_src.title == "teamcity"
        and object == "request"
        and regex(object.query, "/app/rest/users/(id:\d+)/tokens/\w+", 0) != null
        and object.type == "POST"
        and object.name == "RPC2"
        and status == "success"
        and object.name == "RPC2"
        and object.account.id != null
    }

event Token_Created_Account_ID:
    key:
        event_src.host, event_src.title, object.name, object.account.id
    filter {
        filter::NotFromCorrelator()
        and event_src.title == "teamcity"
        and object.type == "user_token"
        and object.name == "RPC2"
        and object.account.id != null
        and status == "success"
    }

rule CVE_2023_42793_Teamcity_Token_Manipulation: ((Token_Request_Account_Name and Token_Created_Account_Name?) or (Token_Request_Account_ID and Token_Created_Account_ID?)) timer 1m

    on Token_Request_Account_Name {
        $subject.account.id = subject.account.id

        $object.account.name = object.account.name

        $object.process.meta = object.process.meta

        $object.name = object.name
        $object.type = object.type
        $object.query = object.query

        $src.asset = src.asset
        $src.host = src.host
        $src.ip = src.ip
        $src.hostname = src.hostname
        $src.fqdn = src.fqdn
        $src.port = src.port
        $src.mac = src.mac

        $numfield3 = numfield3 # Millisecond Timestamp (to understand the events order)

        $event_src.host = event_src.host
        $event_src.fqdn = event_src.fqdn
        $event_src.hostname = event_src.hostname
        $event_src.ip = event_src.ip
        $event_src.asset = event_src.asset
        $event_src.vendor = event_src.vendor
        $event_src.title = event_src.title
        $event_src.subsys = event_src.subsys
        $event_src.category = event_src.category
        $event_src.rule = event_src.rule

        $alert.key = lower(join([src.host, object.query], "|"))
        $alert.context = "Requested RPC2 token for user " + $object.account.name
        $alert.regex_match = regex(object.query, "/app/rest/users/((name:\w+)|(id:\d+))/tokens/\w+", 1)
    }

    on Token_Created_Account_Name {
        close
    }
       
    on Token_Request_Account_ID {
        $subject.account.id = subject.account.id

        $object.account.id = object.account.id

        $object.process.meta = object.process.meta

        $object.name = object.name
        $object.type = object.type
        $object.query = object.query

        $src.asset = src.asset
        $src.host = src.host
        $src.ip = src.ip
        $src.hostname = src.hostname
        $src.fqdn = src.fqdn
        $src.port = src.port
        $src.mac = src.mac

        $numfield3 = numfield3 # Millisecond Timestamp (to understand the events order)

        $event_src.host = event_src.host
        $event_src.fqdn = event_src.fqdn
        $event_src.hostname = event_src.hostname
        $event_src.ip = event_src.ip
        $event_src.asset = event_src.asset
        $event_src.vendor = event_src.vendor
        $event_src.title = event_src.title
        $event_src.subsys = event_src.subsys
        $event_src.category = event_src.category
        $event_src.rule = event_src.rule

        $alert.key = lower(join([src.host, object.query], "|"))
        $alert.context = "Requested RPC2 token for userID " + $object.account.id
        $alert.regex_match = regex(object.query, "/app/rest/users/((name:\w+)|(id:\d+))/tokens/\w+", 1)
    }

    on Token_Created_Account_ID {
        close
    }

emit {
    if $subject.account.id == null then
        $correlation_type = "incident"
    else
        $correlation_type = "event"
    endif

    $subject = "account"
    $action = "create"
    $object = "resource"
    $status = "success"

    $detect = "CVE-2023-42793"

    $importance = "medium"

    $category.generic = "Attack"
    $category.high = "Initial Access"
    $category.low = "Compromise Software Dependencies and Development Tools"

    $incident.aggregation.key = join([$correlation_name, $event_src.host, $alert.key], "|")
    $incident.severity = $importance
    $incident.category = "Undefined"
    $incident.aggregation.timeout = 2h
}
