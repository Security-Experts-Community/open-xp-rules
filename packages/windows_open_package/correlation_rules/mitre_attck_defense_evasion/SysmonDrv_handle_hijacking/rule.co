 event SysmonDrv_InvalidParam:
    key:
        event_src.host
    filter {
        filter::NotFromCorrelator() and
        event_src.title == "sysmon" and
        msgid == "255" and
        lower(object.name) == "drivercommunication" and
        regex(lower(reason), "failed.*retrieve.*events(неверно|invalid)|(параметр|parameter)", 0) != null
    }   

rule SysmonDrv_handle_hijacking: SysmonDrv_InvalidParam+ -> SysmonDrv_InvalidParam

        on SysmonDrv_InvalidParam {
        # object
        $object = object
        $object.name = object.name

        # action
        $action = action

        # status
        $status = status

        $reason = reason

        # event src
        $event_src.host = event_src.host
        $event_src.fqdn = event_src.fqdn
        $event_src.hostname = event_src.hostname
        $event_src.ip = event_src.ip
        $event_src.asset = event_src.asset
        $event_src.vendor = event_src.vendor
        $event_src.title = event_src.title
        $event_src.subsys = event_src.subsys
        $event_src.category = "Host security"
    }

emit {
    $correlation_name = "SysmonDrv_handle_hijacking"
    $correlation_type = "incident"

    $importance = "medium"

    $category.generic = "Attack"
    $category.high = "Defense Evasion"
    $category.low = "Impair Defenses"

    $incident.aggregation.key = join([$correlation_name, lower($event_src.host), lower($object.name)], "|")
    $incident.aggregation.timeout = 2h

    $incident.severity = $importance

    $incident.category = "ProtectionMalfunction"
    $incident.type = "Malfunction"
}