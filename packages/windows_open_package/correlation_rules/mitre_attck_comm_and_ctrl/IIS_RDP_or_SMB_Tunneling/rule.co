event IIS_RDP_or_SMB_Tunneling:
    key:
        event_src.host
    filter {
        filter::NotFromCorrelator()
        and 
        object.process.name == "w3wp.exe"
        and 
        in_list([445, 3389], dst.port)
        and
        src.ip == dst.ip
        and (
            (event_src.title == "windows" and msgid == "5156")
            or 
            (event_src.title == "sysmon" and msgid == "3")
        )
    }

rule IIS_RDP_or_SMB_Tunneling: IIS_RDP_or_SMB_Tunneling

    on IIS_RDP_or_SMB_Tunneling {
        $object.account.domain = object.account.domain
        $object.account.fullname = object.account.fullname
        $object.account.name = object.account.name
        $object.account.id = object.account.id

        $object.process.id = object.process.id
        $object.process.name = object.process.name
        $object.process.path = object.process.path
        $object.process.fullpath = object.process.fullpath
        $object.process.guid = object.process.guid

        $direction = direction

        $src.host = src.host
        $src.fqdn = src.fqdn
        $src.hostname = src.hostname
        $src.ip = src.ip
        $src.port = src.port
        $src.asset = src.asset

        $protocol = protocol
        
        $dst.host = dst.host
        $dst.fqdn = dst.fqdn
        $dst.hostname = dst.hostname
        $dst.ip = dst.ip
        $dst.port = dst.port
        $dst.asset = dst.asset

        $event_src.host = event_src.host
        $event_src.fqdn = event_src.fqdn
        $event_src.hostname = event_src.hostname
        $event_src.ip = event_src.ip
        $event_src.asset = event_src.asset
        $event_src.vendor = event_src.vendor
        $event_src.title = event_src.title
        $event_src.subsys = event_src.subsys
        $event_src.category = event_src.category
        $event_src.rule = event_src.rule

        $alert.key = join([$event_src.host, object.process.name, dst.ip, dst.port], "|")
        $alert.context = object.process.name + " " + join([src.ip, src.port], ":") + " -> " + join([dst.ip, dst.port], ":")
    }

emit {
    $correlation_type = "event"

    $subject = "process"
    $action = "open"
    $object = "connection"   
    $status = "success"

    # фильтр с direction == "egress", то есть event_src = src
    if $event_src.ip == null  and not in_subnet($src.ip, "127.0.0.0/8") and find_substr($src.host, "docker.internal") == null then
        $event_src.ip = $src.ip
    endif

    $importance = "high"

    $category.generic = "Attack"
    $category.high = "Command and Control"
    $category.low = "Protocol Tunneling"

    $incident.aggregation.key = join([$correlation_name, $event_src.host, $object.process.fullpath], "|")
    $incident.severity = $importance
    $incident.category = "Undefined"
    $incident.aggregation.timeout = 2h
}
