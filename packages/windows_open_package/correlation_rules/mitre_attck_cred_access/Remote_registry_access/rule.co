event Share_Access:
    key:
        event_src.host, subject.account.session_id
    filter {
        filter::NotFromCorrelator() and
        event_src.title == "windows" and
        msgid == "5145" and
        subject == "account" and 
        action == "access" and 
        object == "file_object" and
        lower(object.storage.id) == "\\\\*\\ipc$" and
        lower(object.storage.name) == "winreg"
    }

event Special_logon:
    key:
        event_src.host, subject.account.session_id
    filter {
        filter::NotFromCorrelator() and
        event_src.title == "windows" and
        msgid == "4672" and
        subject == "account" and 
        action == "elevate" and 
        object == "account" and
        find_substr(lower(object.account.privileges), "sebackupprivilege") != null
    }

rule Remote_registry_access: Share_Access and Special_logon

    init {
        $labels = "w_auto"
    }

 on Share_Access {
        $subject = subject  #account

        $subject.account.id = subject.account.id
        $subject.account.name = subject.account.name
        $subject.account.domain = subject.account.domain
        $subject.account.fullname = subject.account.fullname
        $subject.account.session_id = subject.account.session_id 
        $subject.account.privileges = datafield9        # only rights 
        $datafield9 = subject.account.privileges        # mask

        $action = action    # access

        $object = object # file_object

        $object.name = object.name
        $object.path = object.path
        $object.fullpath = object.fullpath

        $object.storage.id = object.storage.id
        $object.storage.name = object.storage.name
        $object.storage.path = object.storage.path
        $object.storage.fullpath = object.storage.fullpath

        $src.host = src.host
        $src.ip = src.ip
        $src.hostname = src.hostname
        $src.fqdn = src.fqdn
        $src.mac = src.mac
        $src.port = src.port
        $src.asset = src.asset        
        
        #$dst.host = dst.host
        $dst.ip = dst.ip
        #$dst.hostname = dst.hostname
        #$dst.fqdn = dst.fqdn
        $dst.asset = dst.asset
        $dst.mac = dst.mac
        $dst.port = dst.port       
        
        $datafield6 = datafield6            # Полученные права (коды)
        #$datafield9 = datafield9            # Полученные права (письменный вариант)

        $event_src.host = event_src.host
        $event_src.fqdn = event_src.fqdn
        $event_src.hostname = event_src.hostname
        $event_src.ip = event_src.ip
        $event_src.asset = event_src.asset
        $event_src.vendor = event_src.vendor
        $event_src.title = event_src.title
        $event_src.subsys = event_src.subsys
        $event_src.category = event_src.category
        $event_src.rule = event_src.rule
    }

    on Special_logon {
        $subject.privileges = object.account.privileges     # only privs

        $status = status    # success

        $dst.host = dst.host
        $dst.hostname = dst.hostname
        $dst.fqdn = dst.fqdn
    }
    
emit {
    $correlation_type = "incident"

    $importance = "medium"

    $category.generic = "Attack"
    $category.high = "Credential Access"
    $category.low = "OS Credential Dumping: Security Account Manager"

    $incident.aggregation.key = join([$correlation_name, $subject.account.session_id], "|")
    $incident.aggregation.timeout = 1h

    $incident.severity = "medium"

    $incident.category = "Undefined"
}
