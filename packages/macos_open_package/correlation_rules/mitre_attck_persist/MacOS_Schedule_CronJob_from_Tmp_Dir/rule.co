event Crontab_execution:
    key:
        event_src.host
    filter {
        filter::NotFromCorrelator()
        and action == "execute"
        and object.process.fullpath == "/usr/bin/crontab"
        and (
            (
                find_substr(object.process.cmdline, " /tmp") != null
                or find_substr(object.process.cmdline, " /private/tmp") != null
                or find_substr(object.process.cmdline, " /var/tmp") != null
                or find_substr(object.process.cmdline, " /private/var/tmp") != null 
            ) 
            or
            (
                object.process.cwd == "/tmp"
                or object.process.cwd == "/private/tmp"
                or object.process.cwd == "/var/tmp"
                or object.process.cwd == "/private/var/tmp"
            )
        )   
    }

rule MacOS_Schedule_CronJob_from_Tmp_Dir: Crontab_execution

    init {
        $labels = "w_auto"
    }

    on Crontab_execution {
        $action = action
        $object = object
        $status = status

        $subject.account.name = subject.account.name
        $subject.account.fullname = subject.account.fullname
        $subject.account.domain = subject.account.domain
        $subject.account.session_id = subject.account.session_id
        $subject.account.id = subject.account.id
        $subject.account.privileges = subject.account.privileges

        $subject.process.id = subject.process.id
        $subject.process.name = subject.process.name
        $subject.process.path = subject.process.path
        $subject.process.fullpath = subject.process.fullpath
        $subject.process.hash = subject.process.hash
        $subject.process.version = subject.process.version
        $subject.process.cmdline = subject.process.cmdline
        $subject.process.guid = subject.process.guid
        $subject.process.meta = subject.process.meta
        $subject.process.original_name = subject.process.original_name
        $subject.process.cwd = subject.process.cwd
        $subject.process.chain = subject.process.chain

        $subject.process.parent.id = subject.process.parent.id
        $subject.process.parent.name = subject.process.parent.name
        $subject.process.parent.path = subject.process.parent.path
        $subject.process.parent.fullpath = subject.process.parent.fullpath
        $subject.process.parent.cmdline = subject.process.parent.cmdline

        $object.hash = object.hash
        $object.process.cmdline = object.process.cmdline
        $object.process.cwd = object.process.cwd
        $object.process.fullpath = object.process.fullpath
        $object.process.id = object.process.id
        $object.process.name = object.process.name
        $object.process.parent.id = object.process.parent.id
        $object.process.path = object.process.path

        $event_src.ip = event_src.ip
        $event_src.hostname = event_src.hostname
        $event_src.host = event_src.host
        $event_src.asset = event_src.asset
        $event_src.title = event_src.title
        $event_src.subsys = event_src.subsys
        $event_src.vendor = event_src.vendor
        $event_src.category = event_src.category
        $event_src.rule = event_src.rule

        $datafield1 = datafield1 
        $datafield10 = datafield10 
        $datafield12 = datafield12 
        $datafield13 = datafield13 
        $datafield14 = datafield14 
        $datafield15 = datafield15 
        $datafield16 = datafield16 
        $datafield17 = datafield17 
        $datafield18 = datafield18 
        $datafield2 = datafield2 
        $datafield3 = datafield3 
        $datafield4 = datafield4 
        $datafield5 = datafield5 
        $datafield6 = datafield6 
        $datafield7 = datafield7 
        $datafield8 = datafield8 
        
    }

    emit {
        # Обязательные поля корреляционного события
        $correlation_type = "event"
        $importance = "low"

        $category.generic = "Attack"
        $category.high = "Persistence"
        $category.low = "Scheduled Task/Job: Cron"
        
        $incident.severity = $importance
        
    }