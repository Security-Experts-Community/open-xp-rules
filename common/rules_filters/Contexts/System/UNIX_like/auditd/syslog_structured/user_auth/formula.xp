JSON = ''
COND = (
    $eventid != null
    and $node != null
    and $timestamp != null
    and $items["USER_AUTH"] != null
)

$kv_main = keyvalue($items["USER_AUTH"][0], " ", "=", "'")
$kv_msg = keyvalue($kv_main['msg'], ' ', '=', '"')

if $kv_msg["exe"] != "?" then
    # Декодируем HEX, если требуется
    $exe = strip($kv_msg["exe"], '"', '"')
    if $exe == $kv_msg["exe"] then
        $exe = hex_to_string($kv_msg["exe"])
    endif
    
    $process_path_and_name = csv($exe, "/", "")
    $process_fullpath = $exe
    $process_name = $process_path_and_name[length($process_path_and_name) - 1]
    $process_path = strip($exe, "", $process_name)
endif

subject = "account"

if in_list(["su", "sudo"], $process_name) then
    action = "elevate"
    object = "account"
else
    action = "login"
    object = "system"
endif

if ($kv_msg["res"] == "success") then
    status = "ongoing"
else
    status = "failure"
endif

if ($kv_main["auid"] != "4294967295") then
    subject.account.session_id = $kv_main["ses"]
endif

# Декодируем HEX, если требуется
$uid_en = strip($kv_main["UID"], '"', '"')
if $uid_en == $kv_main["UID"] then
    $uid_en = hex_to_string($kv_main["UID"])
endif

$uid_list = csv($uid_en, "@", "")

# Декодируем HEX, если требуется
$id_en = strip($kv_main["ID"], '"', '"')
if $id_en == $kv_main["ID"] then
    $id_en = hex_to_string($kv_main["ID"])
endif

$id_list = csv($id_en, "@", "")

# Декодируем HEX, если требуется
$acct = strip($kv_msg["acct"], '"', '"')
if $acct == $kv_msg["acct"] then
    $acct = hex_to_string($kv_msg["acct"])
endif

$acct_list = csv($acct, "@", "")

if $kv_msg["op"] == "PAM:authentication" then  # Pluggable Authentication Modules
    if $process_name == "su" then
        subject.account.id = $kv_main["uid"]
        subject.account.name = $uid_list[0]
        subject.account.domain = $uid_list[1]

        object.account.name = $acct_list[0]
        object.account.domain = $acct_list[1]

    elif $process_name == "sudo" then
        subject.account.id = $kv_main["uid"]
        
        if $uid_list != null then
            subject.account.name = $uid_list[0]
            subject.account.domain = $uid_list[1]
        else
            subject.account.name = $acct_list[0]
            subject.account.domain = $acct_list[1]
        endif
        
    else
        if ($kv_msg["id"] != null) then
            subject.account.id = $kv_msg["id"]
            subject.account.name = $id_list[0]
            subject.account.domain = $id_list[1]
        else
            subject.account.name = $acct_list[0]
            subject.account.domain = $acct_list[1]
        endif
    endif
    
elif ($process_name == "sshd") then  # OpenSSH
    $openssh_logon_types = ["password", "challenge-response", "pubkey", "hostbased", "gssapi", "none", "pubkey_auth", "hostbased_auth"]
    $openssh_reasons = ["maxtries exceeded", "root denied", "success", "invalid user", "connection closed", "connection abandoned", "unknown"]

    subject.account.name = $acct_list[0]
    subject.account.domain = $acct_list[1]
    
    if in_list($openssh_logon_types, $kv_msg["op"]) then
        datafield7 = $kv_msg["op"]  # logon_type (text)
    endif
    
    if in_list($openssh_reasons, $kv_msg["op"]) then
        reason = $kv_msg["op"]
    else
        reason = $kv_msg["res"]
    endif
endif

if in_list(["su", "sudo"], $process_name) then
    subject.process.fullpath = $process_fullpath
    subject.process.name = $process_name
    subject.process.path = $process_path
    subject.process.id = $kv_main["pid"]
else
    object.process.fullpath = $process_fullpath
    object.process.name = $process_name
    object.process.path = $process_path
    object.process.id = $kv_main["pid"]
endif

if $kv_msg["terminal"] != "?" then
    logon_service = strip($kv_msg["terminal"], "/dev/", "")
endif

if action == "login" then
    if $process_name == "sshd" then
        logon_auth_method = "remote"
        
        if not in_list([$kv_msg["addr"], "?"], $kv_msg["hostname"]) then
            src.hostname = $kv_msg["hostname"]
        endif

        if ($kv_msg["addr"] != "?") then
            src.ip = $kv_msg["addr"]
        endif
    else
        logon_auth_method = "local"
    endif
endif

chain_id = $eventid  # AuditD Event ID

time = epoch_to_datetime(number($timestamp))
msgid = "USER_AUTH"
importance = "low"

if in_list(["su", "sudo"], $process_name) then
    category.generic = "Account"
    category.high = "Users And Rights Management"
    category.low = "Manipulation"
else
    category.generic = "Operating System"
    category.high = "Access Management"
    category.low = "Communication"
endif

event_src.title = "unix_like"
event_src.subsys = "auditd"
event_src.category = "Operating system"

if $node != "" then
    if maybe_ipv4($node) != null or maybe_ipv6($node) != null then
        if (in_subnet($node, "127.0.0.0/8") == False and $node != "::1") then
            event_src.ip = $node
            labels = "node_contains_ext_ip"
            $dst_ip = $node
        else
            event_src.ip = recv_ipv4
        endif
    else
        $first_dot = find_substr($node, ".")
        if $first_dot != null then
            event_src.fqdn = $node
            event_src.hostname = substr($node, 0, $first_dot)
            $dst_fqdn = event_src.fqdn
            $dst_hostname = event_src.hostname
        else
            event_src.hostname = $node
            $dst_hostname = event_src.hostname
        endif
    endif
else
    event_src.ip = recv_ipv4
endif

if logon_auth_method == "remote" then
    dst.ip = $dst_ip
    dst.fqdn = $dst_fqdn
    dst.hostname = $dst_hostname
endif

id = "PT_UNIX_like_auditd_syslog_structured_user_auth"
